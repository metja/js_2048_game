{"version":3,"sources":["scripts/main.js"],"names":["root","document","querySelector","gameScore","button","fieldCells","querySelectorAll","messageLose","messageWin","messageStart","scoreResult","scoreElements","arrowKeyCode","left","up","right","down","gameTable","checkEmptySpace","i","length","includes","setRandomValue","row","Math","floor","random","col","value","addValueToCells","gameTableData","forEach","rows","cells","push","shift","classList","textContent","add","mergeCell","data","arrayResult","firstEl","secondEl","slice","moveCells","direction","arrayElements","j","newElements","filter","el","l","reverse","isGameFinished","sumScore","reduce","acc","changeGameTable","showResultMessage","result","remove","removeEventListener","startGame","e","keyCode","cleanGameTable","map","cell","_","initGame","addEventListener"],"mappings":"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","file":"main.8ed4824f.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst root = document.querySelector('.container');\nconst gameScore = root.querySelector('.game-score');\nconst button = root.querySelector('.button');\nconst fieldCells = root.querySelectorAll('.field-cell');\nconst messageLose = root.querySelector('.message-lose');\nconst messageWin = root.querySelector('.message-win');\nconst messageStart = root.querySelector('.message-start');\n\nlet scoreResult = 0;\nlet scoreElements = [];\n\nconst arrowKeyCode = {\n  left: 37,\n  up: 38,\n  right: 39,\n  down: 40,\n};\n\nlet gameTable = [\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n  [0, 0, 0, 0],\n];\n\nfunction checkEmptySpace() {\n  for (let i = 0; i < gameTable.length; i++) {\n    if (gameTable[i].includes(0)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nfunction setRandomValue() {\n  while (checkEmptySpace()) {\n    const row = Math.floor(Math.random() * 4);\n    const col = Math.floor(Math.random() * 4);\n\n    if (gameTable[row][col] === 0) {\n      const value = (Math.random() >= 0.9) ? 4 : 2;\n\n      gameTable[row][col] = value;\n      break;\n    }\n  }\n};\n\nfunction addValueToCells() {\n  const gameTableData = [];\n\n  gameTable.forEach(rows => {\n    rows.forEach(cells => {\n      gameTableData.push(cells);\n    });\n  });\n\n  fieldCells.forEach((cells) => {\n    const value = gameTableData.shift();\n\n    cells.classList = 'field-cell';\n\n    if (value) {\n      cells.textContent = value;\n      cells.classList.add(`field-cell--${cells.textContent}`);\n    } else {\n      cells.textContent = '';\n    }\n  });\n};\n\nfunction mergeCell(data) {\n  const arrayResult = [];\n\n  let firstEl = data.shift();\n\n  if (!firstEl) {\n    return;\n  }\n\n  for (let i = 0; i < gameTable.length; i++) {\n    const secondEl = data.shift();\n\n    if (!secondEl) {\n      if (firstEl) {\n        arrayResult.push(firstEl);\n      }\n      break;\n    } else if (firstEl === secondEl) {\n      arrayResult.push(firstEl + secondEl);\n      scoreElements.push(firstEl + secondEl);\n      firstEl = null;\n    } else if (firstEl !== secondEl) {\n      if (firstEl) {\n        arrayResult.push(firstEl);\n      }\n\n      firstEl = secondEl;\n    }\n  }\n\n  return arrayResult.slice();\n};\n\nfunction moveCells(direction) {\n  const gameTableData = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ];\n\n  switch (direction) {\n    case arrowKeyCode.up:\n      for (let i = 0; i < gameTable.length; i++) {\n        const arrayElements = [];\n\n        for (let j = 0; j < gameTable.length; j++) {\n          arrayElements.push(gameTable[j][i]);\n        };\n\n        const newElements = mergeCell(arrayElements.filter(el => el > 0));\n\n        if (newElements) {\n          for (let l = 0; l < newElements.length; l++) {\n            gameTableData[l][i] = newElements[l];\n          };\n        };\n      };\n\n      break;\n\n    case arrowKeyCode.down:\n      for (let i = 0; i < gameTable.length; i++) {\n        const arrayElements = [];\n\n        for (let j = 0; j < gameTable.length; j++) {\n          arrayElements.push(gameTable[gameTable.length - 1 - j][i]);\n        };\n\n        const newElements = mergeCell(arrayElements.filter(el => el > 0));\n\n        if (newElements) {\n          for (let l = 0; l < newElements.length; l++) {\n            gameTableData[gameTable.length - 1 - l][i] = newElements[l];\n          };\n        };\n      };\n\n      break;\n\n    case arrowKeyCode.left:\n      for (let i = 0; i < gameTable.length; i++) {\n        const newElements = mergeCell(gameTable[i].filter(el => el > 0));\n\n        if (newElements) {\n          for (let j = 0; j < newElements.length; j++) {\n            gameTableData[i][j] = newElements[j];\n          };\n        };\n      };\n\n      break;\n\n    case arrowKeyCode.right:\n      for (let i = 0; i < gameTable.length; i++) {\n        const newElements\n          = mergeCell(gameTable[i].filter(el => el > 0).reverse());\n\n        if (newElements) {\n          for (let j = 0; j < newElements.length; j++) {\n            gameTableData[i][gameTable.length - 1 - j] = newElements[j];\n          };\n        };\n      };\n\n      break;\n\n    default:\n      break;\n  };\n\n  return gameTableData;\n};\n\nfunction isGameFinished() {\n  if (`${gameTable}` !== `${moveCells(arrowKeyCode.up)}`\n  || `${gameTable}` !== `${moveCells(arrowKeyCode.down)}`\n  || `${gameTable}` !== `${moveCells(arrowKeyCode.left)}`\n  || `${gameTable}` !== `${moveCells(arrowKeyCode.right)}`) {\n    return true;\n  }\n};\n\nfunction sumScore() {\n  if (scoreElements.length > 0) {\n    scoreResult += scoreElements.reduce((acc, el) => {\n      return acc + el;\n    }, 0);\n\n    gameScore.textContent = !scoreResult ? 0 : scoreResult;\n  }\n};\n\nfunction changeGameTable(direction) {\n  scoreElements = [];\n\n  const gameTableData = moveCells(direction);\n\n  if (`${gameTable}` === `${gameTableData}`) {\n    return false;\n  }\n\n  gameTable = gameTableData;\n\n  return true;\n};\n\nfunction showResultMessage(result) {\n  if (result) {\n    messageWin.classList.remove('hidden');\n  } else {\n    messageLose.classList.remove('hidden');\n  }\n\n  document.removeEventListener('keydown', startGame);\n};\n\nfunction startGame(e) {\n  if (e.arrowKeyCode < 37 || e.arrowKeyCode > 40) {\n    return;\n  }\n\n  if (changeGameTable(e.keyCode)) {\n    if (scoreElements.includes(2048)) {\n      showResultMessage(true);\n    }\n\n    sumScore();\n    setRandomValue();\n\n    if (!checkEmptySpace() && !isGameFinished()) {\n      showResultMessage(false);\n    }\n\n    scoreElements = [];\n    addValueToCells();\n  }\n};\n\nfunction cleanGameTable() {\n  [...fieldCells].map(cell => {\n    cell.classList.remove(`field-cell--${cell.textContent}`);\n    cell.textContent = '';\n  });\n\n  gameTable.map(row => row.map((_, i) => {\n    row[i] = 0;\n  }));\n}\n\nfunction initGame() {\n  button.classList.remove('start');\n  button.textContent = 'Restart';\n  button.classList.add('restart');\n\n  messageStart.classList.add('hidden');\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  gameScore.textContent = '0';\n  scoreResult = 0;\n\n  cleanGameTable();\n  setRandomValue();\n  setRandomValue();\n  addValueToCells();\n\n  document.addEventListener('keydown', startGame);\n}\n\nbutton.addEventListener('click', initGame);\n"]}